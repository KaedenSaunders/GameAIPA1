Using cuda device
Wrapping the env in a VecTransposeImage.
C:\Users\Kaeden\AppData\Local\Programs\Python\Python38\lib\site-packages\stable_baselines3\common\on_policy_algorithm.py:150: UserWarning: You are trying to run PPO on the GPU, but it is primarily intended to run on the CPU when not using a CNN policy (you are using ActorCriticPolicy which should be a MlpPolicy). See https://github.com/DLR-RM/stable-baselines3/issues/1245 for more info. You can pass `device='cpu'` or `export CUDA_VISIBLE_DEVICES=` to force using the CPU.Note: The model will train, but the GPU utilization will be poor and the training might take longer than on CPU.
  warnings.warn(
Logging to runs/9ldubolx\PPO_1
Saving video to C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-0-to-step-200.mp4
Moviepy - Building video C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-0-to-step-200.mp4.
Moviepy - Writing video C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-0-to-step-200.mp4
                                                                                                                       

Moviepy - Done !
Moviepy - video ready C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-0-to-step-200.mp4
---------------------------------
| rollout/           |          |
|    ep_len_mean     | 570      |
|    ep_rew_mean     | 187      |
| time/              |          |
|    fps             | 216      |
|    iterations      | 1        |
|    time_elapsed    | 9        |
|    total_timesteps | 2048     |
---------------------------------
Saving video to C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-2000-to-step-2200.mp4
Moviepy - Building video C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-2000-to-step-2200.mp4.
Moviepy - Writing video C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-2000-to-step-2200.mp4

Moviepy - Done !
Moviepy - video ready C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-2000-to-step-2200.mp4
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 563         |
|    ep_rew_mean          | 225         |
| time/                   |             |
|    fps                  | 154         |
|    iterations           | 2           |
|    time_elapsed         | 26          |
|    total_timesteps      | 4096        |
| train/                  |             |
|    approx_kl            | 0.008087236 |
|    clip_fraction        | 0.0636      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.79       |
|    explained_variance   | -0.00138    |
|    learning_rate        | 0.0003      |
|    loss                 | 101         |
|    n_updates            | 10          |
|    policy_gradient_loss | -0.0071     |
|    value_loss           | 161         |
-----------------------------------------
Saving video to C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-4000-to-step-4200.mp4
Moviepy - Building video C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-4000-to-step-4200.mp4.
Moviepy - Writing video C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-4000-to-step-4200.mp4

Moviepy - Done !
Moviepy - video ready C:\Users\Kaeden\Documents\GameAIPA1\videos\9ldubolx\rl-video-step-4000-to-step-4200.mp4
-----------------------------------------
| rollout/                |             |
|    ep_len_mean          | 485         |
|    ep_rew_mean          | 162         |
| time/                   |             |
|    fps                  | 140         |
|    iterations           | 3           |
|    time_elapsed         | 43          |
|    total_timesteps      | 6144        |
| train/                  |             |
|    approx_kl            | 0.009874957 |
|    clip_fraction        | 0.0749      |
|    clip_range           | 0.2         |
|    entropy_loss         | -1.78       |
|    explained_variance   | 0.106       |
|    learning_rate        | 0.0003      |
|    loss                 | 28.7        |
|    n_updates            | 20          |
|    policy_gradient_loss | -0.014      |
|    value_loss           | 189         |
-----------------------------------------
  File "PA1.py", line 40, in <module>
    model.learn(
  File "C:\Users\Kaeden\AppData\Local\Programs\Python\Python38\lib\site-packages\stable_baselines3\ppo\ppo.py", line 311, in learn
    return super().learn(
  File "C:\Users\Kaeden\AppData\Local\Programs\Python\Python38\lib\site-packages\stable_baselines3\common\on_policy_algorithm.py", line 336, in learn
    self.train()
  File "C:\Users\Kaeden\AppData\Local\Programs\Python\Python38\lib\site-packages\stable_baselines3\ppo\ppo.py", line 207, in train
    for rollout_data in self.rollout_buffer.get(self.batch_size):
  File "C:\Users\Kaeden\AppData\Local\Programs\Python\Python38\lib\site-packages\stable_baselines3\common\buffers.py", line 504, in get
    yield self._get_samples(indices[start_idx : start_idx + batch_size])
  File "C:\Users\Kaeden\AppData\Local\Programs\Python\Python38\lib\site-packages\stable_baselines3\common\buffers.py", line 520, in _get_samples
    return RolloutBufferSamples(*tuple(map(self.to_torch, data)))
  File "C:\Users\Kaeden\AppData\Local\Programs\Python\Python38\lib\site-packages\stable_baselines3\common\buffers.py", line 138, in to_torch
    return th.tensor(array, device=self.device)
KeyboardInterrupt
